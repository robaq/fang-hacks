#!/bin/sh

echo "Content-type: text/html"
echo ""

source func.cgi

start_telnetd()
{
  if [ $(pidof telnetd) ]; then
    pid=$(pidof telnetd)
    echo "Telnetd is already running! (PID: $pid)<br/>"
    echo "Killing PID $pid<br/>"
    kill $pid
    sleep 1
  fi
  /usr/sbin/telnetd &
  sleep 1
  echo "Started (PID: $(pidof telnetd))<br/>"
}

manual_mount()
{
  present=$(lsblk -o KNAME,FSTYPE |grep mmcblk0p2)
  if [ $? -eq 0 ]; then
    echo "Device is present (filesystem: $(echo $present | cut -d' ' -f2))<br/>"
    if [ ! -d /media/mmcblk0p2 ]; then
      echo "Creating mount-point (/media/mmcblk0p2)<br/>"
      mkdir /media/mmcblk0p2
    fi
    mount /dev/mmcblk0p2 /media/mmcblk0p2 2>&1
    rc=$?
    echo "<br/>"
    if [ $rc -eq 0 ]; then echo "Mounted successfully!<br/>"; else echo "Failed to mount!<br/>"; fi
  else
    echo "Failed: The sd-card is not inserted or does not contain a mmcblk0p2 partition!<br/>"
  fi
}

update_file()
{
 if [ ! -e "$2" ]; then
   echo "Source file not found: '$2'<br/>"
   return
 fi

 diff="$(diff "$1" "$2")"
 if [ $? -eq 0 ]; then
   echo "$1: Unchanged!<br/>"
 else
   echo "$1: Changed!<br/>"
   echo "<pre>$diff</pre>"
   install -m $3 "$2" "$1" 2>&1
   if [ $? -eq 0 ]; then echo "Updated successfully<br/>"; else echo "Failed to update '$2' -> '$1'<br/>"; fi
 fi
}

update()
{
  echo "<hr/>"
  update_file "/etc/hotplug/sdcard" "/media/mmcblk0p1/bootstrap/sdcard" 755
  echo "<hr/>"
  update_file "/etc/fang_hacks.sh" "/media/mmcblk0p1/bootstrap/fang_hacks.sh" 755
  echo "<hr/>"
  update_file "/etc/fang_hacks.cfg" "/media/mmcblk0p1/bootstrap/fang_hacks.cfg" 644
  echo "<hr/>"
  update_file "/etc/init.d/rc.local" "/media/mmcblk0p1/bootstrap/rc.local" 755
  echo "<hr/>"
  update_file "/etc/init.d/rcS" "/media/mmcblk0p1/bootstrap/rcS" 755
}

apply_file()
{
  if [ -e "$1" ]; then
    install -m $3 "$1" "$2" 2>&1
    if [ $? -ne 0 ]; then echo "Failed to install $(basename $1)<br/>"; fi
  else
    echo "Source file not found: '$1'<br/>"
  fi
}

apply()
{
  apply_file "/media/mmcblk0p1/bootstrap/sdcard" "/etc/hotplug/sdcard" 755
  apply_file "/media/mmcblk0p1/bootstrap/rc.local" "/etc/init.d/rc.local" 755
  apply_file "/media/mmcblk0p1/bootstrap/rcS" "/etc/init.d/rcS" 755
  apply_file "/media/mmcblk0p1/bootstrap/fang_hacks.sh" "/etc/fang_hacks.sh" 755
  apply_file "/media/mmcblk0p1/bootstrap/fang_hacks.cfg" "/etc/fang_hacks.cfg" 644

  if [ -x "/etc/fang_hacks.sh" ]; then
    echo "Running fang_hacks.sh...<br/>"
    echo "<pre>"
    /etc/fang_hacks.sh 2>&1
    echo "</pre>"
  fi
}

record()
{
  RECORDINGS="/media/mmcblk0p2/data/tmp/recordings"
  FFMPEG_PATH="/media/mmcblk0p2/data/test/ffmpeg"
  action=$1

  if [ $action = "Start" ]; then
    if [ $(pidof ffmpeg) ]; then
      echo "ffmpeg is already running"
    else
      if [ ! -f "$FFMPEG_PATH/ffmpeg" ]; then
        echo "ffmpeg not in path \"$FFMPEG_PATH\", please fix"
      else
        filename="${2}.m3u8"
        echo "Starting ffmpeg with filename: $filename..."
        $($FFMPEG_PATH/ffmpeg -nostdin -rtsp_transport udp -i rtsp://localhost/unicast -c copy -hls_time 10 -hls_list_size 0 $RECORDINGS/$filename 2>/dev/null 1>&2&)
        sleep 1
      fi
    fi
  elif [ $action = "Stop" ]; then
    if [ $(pidof ffmpeg) ]; then
      pid=$(pidof ffmpeg)
      echo "Stopping ffmpeg, killing PID $pid<br/>"
      kill -9 $pid
      sleep 1
    else
      echo "ffmpeg is not running"
    fi
  elif [ $action = "Delete" ]; then
    if [ $(pidof ffmpeg) ]; then
      echo "ffmpeg running, unable to delete \"$2\""
    else
      filename="${2%.*}"
      echo "Deleting file \"$2\""
      find $RECORDINGS -type f -iname $filename.m3u8 -exec rm {} \;
      find $RECORDINGS -type f -iname $filename*.ts -exec rm {} \;
    fi
  else
    :
  fi

  redirect='record'
}

echo "<br/>"
if [ -n "$F_cmd" ]; then
  case "$F_cmd" in
  showlog)
    echo "Contents of /tmp/hacks.log:<br/>"
    echo "<pre>"
    cat /tmp/hacks.log
    echo "</pre>"
    ;;
  reboot)
    echo "Rebooting device...<br/>"
    /sbin/reboot
    ;;
  telnetd)
    echo "Starting default telnetd (port 23)...<br/>"
    start_telnetd
    ;;
  manual_mount)
    echo "Mounting /dev/mmcblk0p2 to /media/mmcblk0p2...<br/>"
    manual_mount
    ;;
  update)
    echo "Updating fang hacks scripts...<br/>"
    update
    ;;
  apply)
    echo "Applying fang hacks scripts...<br/>"
    apply
    ;;
  apply_cfg)
    echo "Applying fang hacks configuration...<br/>"
    echo "<pre>"
    if [ -n "${F_hacks_enable}" ]; then
      echo "HACKS_ENABLED=1"
      cmd="s/^\(HACKS_ENABLED\)=0/\1=1/;"
    else
      echo "HACKS_ENABLED=0"
      cmd="s/^\(HACKS_ENABLED\)=1/\1=0/;"
    fi

    if [ -n "${F_disable_cloud}" ]; then
      echo "DISABLE_CLOUD=1"
      cmd="$cmd s/^\(DISABLE_CLOUD\)=0/\1=1/;"
    else
      echo "DISABLE_CLOUD=0"
      cmd="$cmd s/^\(DISABLE_CLOUD\)=1/\1=0/;"
    fi
    sed -i.bak "$cmd" /etc/fang_hacks.cfg 2>&1
    echo "</pre>"
    if [ $? -eq 0 ]; then echo "Success"; else echo "Failed"; fi
    ;;
  settz)
    tz=$(printf '%b' "${F_tz//%/\\x}")
    if [ $(cat /etc/TZ) != "$tz" ]; then
      echo "Setting TZ to '$tz'...<br/>"
      echo "$tz" > /etc/TZ
      echo "Syncing time...<br/>"
      /usr/sbin/ntpd -q -n -p time.google.com 2>&1
    fi
    hst=$(printf '%b' "${F_hostname//%/\\x}")
    if [ $(cat /etc/hostname) != "$hst" ]; then
      echo "Setting hostname to '$hst'...<br/>"
      echo "$hst" > /etc/hostname
    fi
    if [ $? -eq 0 ]; then echo "<br/>Success<br/>"; else echo "<br/>Failed<br/>"; fi
    ;;
  expandfs)
    source /media/mmcblk0p2/data/etc/profile >/dev/null
    if type awk >/dev/null; then
      if type fdisk >/dev/null; then
        p2_start=$(fdisk -l /dev/mmcblk0 | grep mmcblk0p2 | awk '{print $2}')
        echo "Found the start point of mmcblk0p2: $p2_start<br/>"
        fdisk /dev/mmcblk0 >/dev/null << __EOF__
d
2
n
p
2
$p2_start

p
w
__EOF__
        sync
        touch /etc/.resize_runonce
        echo "Ok, Partition resized, please reboot now<br/>"
      else
        echo "fdisk not found!<br/>"
      fi
    else
      echo "awk not found!"
    fi
    ;;
  record)
    submit=$(printf '%b' "${F_submit//%/\\x}")
    filename=$(printf '%b' "${F_filename//%/\\x}")
    record $submit $filename
    ;;
  *)
    echo "Unsupported command '$F_cmd'"
    ;;
  esac
fi

echo "<hr/>"
if [ -z "$redirect"]; then
  redirect='status'
fi
echo "<button title='Return to status page' onClick=\"window.location.href='"$redirect"'\">Back</button>"
#echo "<button title='Return to status page' onClick=\"window.location.href='status'\">Back</button>"
